<?xml version="1.0" encoding="utf-8"?>
<Profile>
  <Name>[OrderBot][Trust] Mt. Gulg</Name>
  <Author>Sodimm</Author>
  <BehaviorDirectory>Quest Behaviors</BehaviorDirectory>
  <Order>
    <While Condition="GetQuestStep(69179) == 3">
      <If Condition="not IsOnMap(822)">
        <RunCode Name="Enable_Trust_Plugin"/>
        <WaitTimer WaitTime="3"/>
        <RunCode Name="EnterDuty"/>
        <WaitTimer WaitTime="3"/>
        <If Condition="ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen">
          <CommenceDuty/>
          <WaitTimer WaitTime="3"/>
        </If>
        <WaitWhile Condition="ff14bot.Behavior.CommonBehaviors.IsLoading"/>
      </If>
      <If Condition="IsOnMap(822)">
        <MoveTo Name="Boss Arena 1" XYZ="199.069, -48, -169.3881" Distance="1"/>
        <Grind GrindRef="ForgivenCruelty" PostCombatDelay="3.0" While="ObjectExistsWithId(8260)"/>
        <MoveTo Name="Transition" XYZ="-32.9995, -25.36692, -196.2716"/>
        <RunCode Name="Transition"/>
        <MoveTo Name="Coffer 2" XYZ="-82.59937, 172.735, -247.665"/>
        <MoveTo Name="Coffer 3" XYZ="-239.5555, 201.9996, -97.39667"/>
        <MoveTo Name="Boss Arena 2" XYZ="-236.4691, 210.0001, -54.79517" Distance="1"/>
        <Grind GrindRef="ForgivenWhimsy" PostCombatDelay="3.0" While="ObjectExistsWithId(8261)"/>
        <MoveTo Name="Coffer 5" XYZ="-288.0424, 194, 84.65469"/>
        <MoveTo Name="Coffer 6" XYZ="-252.7066, 202, 140.1571"/>
        <NoCombatMoveTo XYZ="-240.6831, 204.3701, 174.0576"/>
        <WaitWhile Condition="Core.Me.InCombat"/>
        <WaitTimer WaitTime="5"/>
        <NoCombatMoveTo XYZ="-239.9061, 204.3701, 189.3941"/>
        <WaitWhile Condition="Core.Me.InCombat"/>
        <WaitTimer WaitTime="10"/>
        <MoveTo Name="Up Ramp" XYZ="-240.0199, 210, 213.1307"/>
        <MoveTo Name="Boss Arena 3" XYZ="-240.1095, 210, 228.8162"/>
        <Grind GrindRef="ForgivenObscenity" PostCombatDelay="3.0" While="ObjectExistsWithId(8262)"/>
        <RunCode Name="LeaveDuty"/>
        <WaitTimer WaitTime="5"/>
        <RunCode Name="Handle_Cutscene_Talking"/>
        <WaitTimer WaitTime="5"/>
      </If>
    </While>
    <While Condition="IsQuestCompleted(69179) and Core.Player.ClassLevel &lt; 80">
      <If Condition="not IsOnMap(822)">
        <RunCode Name="Enable_Trust_Plugin"/>
        <WaitTimer WaitTime="3"/>
        <RunCode Name="EnterDuty"/>
        <WaitTimer WaitTime="3"/>
        <If Condition="ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen">
          <CommenceDuty/>
          <WaitTimer WaitTime="3"/>
        </If>
        <WaitWhile Condition="ff14bot.Behavior.CommonBehaviors.IsLoading"/>
      </If>
      <If Condition="IsOnMap(822)">
        <MoveTo Name="Boss Arena 1" XYZ="199.069, -48, -169.3881" Distance="1"/>
        <Grind GrindRef="ForgivenCruelty" PostCombatDelay="3.0" While="ObjectExistsWithId(8260)"/>
        <MoveTo Name="Transition" XYZ="-32.9995, -25.36692, -196.2716"/>
        <RunCode Name="Transition"/>
        <MoveTo Name="Coffer 2" XYZ="-82.59937, 172.735, -247.665"/>
        <MoveTo Name="Coffer 3" XYZ="-239.5555, 201.9996, -97.39667"/>
        <MoveTo Name="Boss Arena 2" XYZ="-236.4691, 210.0001, -54.79517" Distance="1"/>
        <Grind GrindRef="ForgivenWhimsy" PostCombatDelay="3.0" While="ObjectExistsWithId(8261)"/>
        <MoveTo Name="Coffer 5" XYZ="-288.0424, 194, 84.65469"/>
        <MoveTo Name="Coffer 6" XYZ="-252.7066, 202, 140.1571"/>
        <NoCombatMoveTo XYZ="-240.6831, 204.3701, 174.0576"/>
        <WaitWhile Condition="Core.Me.InCombat"/>
        <WaitTimer WaitTime="5"/>
        <NoCombatMoveTo XYZ="-239.9061, 204.3701, 189.3941"/>
        <WaitWhile Condition="Core.Me.InCombat"/>
        <WaitTimer WaitTime="10"/>
        <MoveTo Name="Up Ramp" XYZ="-240.0199, 210, 213.1307"/>
        <MoveTo Name="Boss Arena 3" XYZ="-240.1095, 210, 228.8162"/>
        <Grind GrindRef="ForgivenObscenity" PostCombatDelay="3.0" While="ObjectExistsWithId(8262)"/>
        <RunCode Name="LeaveDuty"/>
        <WaitTimer WaitTime="5"/>
        <RunCode Name="Handle_Cutscene_Talking"/>
        <WaitTimer WaitTime="5"/>
      </If>
    </While>
    <RunCode Name="Disable_Trust_Plugin"/>
    <LLoadProfile Path="../MSQ/[OrderBot] ShB MSQ Automation.xml"/>
  </Order>
  <GrindAreas>
    <GrindArea Name="ForgivenCruelty">
      <Hotspots>
        <Hotspot XYZ="173.99, -48, -170.0094" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8260"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
    <GrindArea Name="ForgivenWhimsy">
      <Hotspots>
        <Hotspot XYZ="-240.0414, 210.0001, -41.5084" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8261"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
    <GrindArea Name="ForgivenObscenity">
      <Hotspots>
        <Hotspot XYZ="-239.8865, 210, 239.2185" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8262"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
  </GrindAreas>
  <CodeChunks>
    <CodeChunk Name="Enable_Trust_Plugin">
      <![CDATA[
        var sideStep = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
        try
        {
          if (!sideStep.Any())
          {
            Logging.Write("Error enabling SideStep.");
            TreeRoot.Stop();
          }
          else if (!sideStep.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling SideStep.");
            sideStep.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("SideStep already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling SideStep.");
          TreeRoot.Stop();
        }
        
        await Coroutine.Sleep(500);
        
        var trustPlugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "Trust");
        try
        {
          if (!trustPlugin.Any())
          {
            Logging.Write("Error enabling Trust Plugin.");
            TreeRoot.Stop();
          }
          else if (!trustPlugin.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling Trust Plugin.");
            trustPlugin.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("Trust Plugin already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling Trust Plugin.");
          TreeRoot.Stop();
        }
      ]]>
    </CodeChunk>
    <CodeChunk Name="Disable_Trust_Plugin">
      <![CDATA[
        var trustPlugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "Trust");
        try
        {
          if (!trustPlugin.Any())
          {
            Logging.Write("Error enabling Trust Plugin.");
            TreeRoot.Stop();
          }
          else if (trustPlugin.FirstOrDefault().Enabled)
          {
            Logging.Write("Disabling Trust Plugin.");
            trustPlugin.FirstOrDefault().Enabled = false;
          }
          else { Logging.Write("Trust Plugin already disabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling Trust Plugin.");
          TreeRoot.Stop();
        }
        
        await Coroutine.Sleep(500);
      
        var sideStep = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
        try
        {
          if (!sideStep.Any())
          {
            Logging.Write("Error enabling SideStep.");
            TreeRoot.Stop();
          }
          else if (!sideStep.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling SideStep.");
            sideStep.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("SideStep already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling SideStep.");
          TreeRoot.Stop();
        }
      ]]>
    </CodeChunk>
    <CodeChunk Name="EnterDuty">
      <![CDATA[
        Logging.Write("Commencing Trust duty.");
        string[] scions = { "Minfilia", "Ryne", "Thancred", "Urianger", "Alphinaud", "Alisaie", "Crystal Exarch", "Lyna", "Y'shtola" };
        var dutyNpc = GameObjectManager.GameObjects.Where(x => x.IsTargetable && x.Distance() < 15f && scions.Contains(x.Name.ToString())).OrderBy(x => x.Distance()).FirstOrDefault();
        while (Core.Me.Location.Distance2D(dutyNpc.Location) > 1.5f)
        {
          await Coroutine.Yield();
          Navigator.PlayerMover.MoveTowards(dutyNpc.Location);
        }
        Navigator.PlayerMover.MoveStop();
        dutyNpc.Interact();
        await Coroutine.Wait(5000, () => SelectString.IsOpen);
        SelectString.ClickSlot(1);
        await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName("Dawn") != null);
        
        if (RaptureAtkUnitManager.GetWindowByName("Dawn") == null) { TreeRoot.Stop(); }
        
        RaptureAtkUnitManager.GetWindowByName("Dawn").SendAction(2,3,15,4,0);//
        await Coroutine.Sleep(100);
        RaptureAtkUnitManager.GetWindowByName("Dawn").SendAction(1,3,14);
        await Coroutine.Wait(10000, () => ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen);
      ]]>
    </CodeChunk>
    <CodeChunk Name="Handle_Cutscene_Talking">
      <![CDATA[
        await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading || QuestLogManager.InCutscene);
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        while (QuestLogManager.InCutscene || Talk.DialogOpen || CommonBehaviors.IsLoading)
        {
          ff14bot.RemoteAgents.AgentCutScene.Instance.PromptSkip();
          if (ff14bot.RemoteAgents.AgentCutScene.Instance.CanSkip && SelectString.IsOpen) { SelectString.ClickSlot(0); }
          if (Talk.DialogOpen) { Talk.Next(); }
          await Coroutine.Yield();
        }
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        await Coroutine.Wait(10000, () => !Core.Me.HasAura(1268));
        await Coroutine.Sleep(3000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="LeaveDuty">
      <![CDATA[
        DutyManager.LeaveActiveDuty();
        await Coroutine.Wait(2000, () => CommonBehaviors.IsLoading);
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        await Coroutine.Sleep(5000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="Transition">
      <![CDATA[
        Core.Me.SetFacing(4.231756f);
        MovementManager.MoveForwardStart();
        while (WorldManager.SubZoneId != 3004)  {  await Coroutine.Yield();  }
        Navigator.PlayerMover.MoveStop();
      ]]>
    </CodeChunk>
  </CodeChunks>
</Profile>
