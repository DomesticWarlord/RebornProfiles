<?xml version="1.0" encoding="utf-8"?>
<Profile>
  <Name>[OrderBot][Trust] Dohn Mheg</Name>
  <Author>Sodimm</Author>
  <BehaviorDirectory>Quest Behaviors</BehaviorDirectory>
  <Order>
    <While Condition="GetQuestStep(68848) == 2">
      <If Condition="not IsOnMap(821)">
        <RunCode Name="Enable_Trust_Plugin"/>
        <WaitTimer WaitTime="3"/>
        <RunCode Name="EnterDuty"/>
        <WaitTimer WaitTime="3"/>
        <If Condition="ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen">
          <CommenceDuty/>
          <WaitTimer WaitTime="3"/>
        </If>
        <WaitWhile Condition="ff14bot.Behavior.CommonBehaviors.IsLoading"/>
      </If>
      <If Condition="IsOnMap(821)">
        <MoveTo Name="Boss Arena 1" XYZ="3.02488, 6.864803, 44.07175" Distance="1"/>
        <Grind GrindRef="AencThonGaze" PostCombatDelay="3.0" While="ObjectExistsWithId(8141)"/>
        <MoveTo Name="Coffer 2" XYZ="-53.68734, 1.967999, -107.0398"/>
        <MoveTo Name="Coffer 3" XYZ="5.573068, 12.29417, -235.7751"/>
        <MoveTo Name="Boss Arena 2" XYZ="9.932323, 23.04288, -324.0858" Distance="1"/>
        <Grind GrindRef="Griaule" PostCombatDelay="3.0" While="ObjectExistsWithId(8143)"/>
        <MoveTo Name="Transition" XYZ="7.662535, 19.99339, -399.414"/>
        <RunCode Name="Transition"/>
        <MoveTo Name="Coffer 5" XYZ="-176.7985, -182.7501, 31.70234"/>
        <MoveTo Name="Shell Crown" XYZ="-171.8525, -178.75, -4.042654"/>
        <RunCode Name="ShellCrown"/>
        <MoveTo Name="Ramp 1" XYZ="-170.2033, -178.75, -17.66021"/>
        <NoCombatMoveTo Name="Move Up Ramp 1" XYZ="-170.3451, -167.4991, -69.80904" UseMesh="False"/>
        <MoveTo Name="Ramp 2" XYZ="-128.6798, -167.4992, -109.1929"/>
        <NoCombatMoveTo Name="Move Up Ramp 2" XYZ="-127.6341, -156.0078, -161.6702" UseMesh="False"/>
        <MoveTo Name="Coffer 6" XYZ="-120.0662, -156.0078, -169.38"/>
        <MoveTo Name="Ramp 3" XYZ="-128.4024, -156.0078, -171.4197"/>
        <NoCombatMoveTo Name="Move Up Ramp 3" XYZ="-130.6011, -144.5228, -230.6489" UseMesh="False"/>
        <WaitTimer WaitTime="5"/>
        <Grind GrindRef="AencThonGait" PostCombatDelay="3.0" While="ObjectExistsWithId(8146)"/>
        <RunCode Name="LeaveDuty"/>
        <WaitTimer WaitTime="5"/>
        <RunCode Name="Handle_Cutscene_Talking"/>
        <WaitTimer WaitTime="5"/>
      </If>
    </While>
    <While Condition="IsQuestCompleted(68848) and Core.Player.ClassLevel &lt; 75">
      <If Condition="not IsOnMap(821)">
        <RunCode Name="Enable_Trust_Plugin"/>
        <WaitTimer WaitTime="3"/>
        <RunCode Name="EnterDuty"/>
        <WaitTimer WaitTime="3"/>
        <If Condition="ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen">
          <CommenceDuty/>
          <WaitTimer WaitTime="3"/>
        </If>
        <WaitWhile Condition="ff14bot.Behavior.CommonBehaviors.IsLoading"/>
      </If>
      <If Condition="IsOnMap(821)">
        <MoveTo Name="Boss Arena 1" XYZ="3.02488, 6.864803, 44.07175" Distance="1"/>
        <Grind GrindRef="AencThonGaze" PostCombatDelay="3.0" While="ObjectExistsWithId(8141)"/>
        <MoveTo Name="Coffer 2" XYZ="-53.68734, 1.967999, -107.0398"/>
        <MoveTo Name="Coffer 3" XYZ="5.573068, 12.29417, -235.7751"/>
        <MoveTo Name="Boss Arena 2" XYZ="9.932323, 23.04288, -324.0858" Distance="1"/>
        <Grind GrindRef="Griaule" PostCombatDelay="3.0" While="ObjectExistsWithId(8143)"/>
        <MoveTo Name="Transition" XYZ="7.662535, 19.99339, -399.414"/>
        <RunCode Name="Transition"/>
        <MoveTo Name="Coffer 5" XYZ="-176.7985, -182.7501, 31.70234"/>
        <MoveTo Name="Shell Crown" XYZ="-171.8525, -178.75, -4.042654"/>
        <RunCode Name="ShellCrown"/>
        <MoveTo Name="Ramp 1" XYZ="-170.2033, -178.75, -17.66021"/>
        <NoCombatMoveTo Name="Move Up Ramp 1" XYZ="-170.3451, -167.4991, -69.80904" UseMesh="False"/>
        <MoveTo Name="Ramp 2" XYZ="-128.6798, -167.4992, -109.1929"/>
        <NoCombatMoveTo Name="Move Up Ramp 2" XYZ="-127.6341, -156.0078, -161.6702" UseMesh="False"/>
        <MoveTo Name="Coffer 6" XYZ="-120.0662, -156.0078, -169.38"/>
        <MoveTo Name="Ramp 3" XYZ="-128.4024, -156.0078, -171.4197"/>
        <NoCombatMoveTo Name="Move Up Ramp 3" XYZ="-130.6011, -144.5228, -230.6489" UseMesh="False"/>
        <WaitTimer WaitTime="5"/>
        <Grind GrindRef="AencThonGait" PostCombatDelay="3.0" While="ObjectExistsWithId(8146)"/>
        <RunCode Name="LeaveDuty"/>
        <WaitTimer WaitTime="5"/>
        <RunCode Name="Handle_Cutscene_Talking"/>
        <WaitTimer WaitTime="5"/>
      </If>
    </While>
    <RunCode Name="Disable_Trust_Plugin"/>
    <LLoadProfile Path="../MSQ/[OrderBot] ShB MSQ Automation.xml"/>
  </Order>
  <GrindAreas>
    <GrindArea Name="AencThonGaze">
      <Hotspots>
        <Hotspot XYZ="6.234492,6.851405,21.12165" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8141 "/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
    <GrindArea Name="Griaule">
      <Hotspots>
        <Hotspot XYZ="12.55156,23.04288,-349.352" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8143"/>
        <TargetMob Id="8145" Weight="999"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
    <GrindArea Name="AencThonGait">
      <Hotspots>
        <Hotspot XYZ="-135.7786,-144.5292,-253.5551" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8146"/>
        <TargetMob Id="8171"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
  </GrindAreas>
  <CodeChunks>
    <CodeChunk Name="Enable_Trust_Plugin">
      <![CDATA[
        var sideStep = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
        try
        {
          if (!sideStep.Any())
          {
            Logging.Write("Error enabling SideStep.");
            TreeRoot.Stop();
          }
          else if (!sideStep.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling SideStep.");
            sideStep.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("SideStep already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling SideStep.");
          TreeRoot.Stop();
        }
        
        await Coroutine.Sleep(500);
        
        var trustPlugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "Trust");
        try
        {
          if (!trustPlugin.Any())
          {
            Logging.Write("Error enabling Trust Plugin.");
            TreeRoot.Stop();
          }
          else if (!trustPlugin.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling Trust Plugin.");
            trustPlugin.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("Trust Plugin already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling Trust Plugin.");
          TreeRoot.Stop();
        }
      ]]>
    </CodeChunk>
    <CodeChunk Name="Disable_Trust_Plugin">
      <![CDATA[
        var trustPlugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "Trust");
        try
        {
          if (!trustPlugin.Any())
          {
            Logging.Write("Error enabling Trust Plugin.");
            TreeRoot.Stop();
          }
          else if (trustPlugin.FirstOrDefault().Enabled)
          {
            Logging.Write("Disabling Trust Plugin.");
            trustPlugin.FirstOrDefault().Enabled = false;
          }
          else { Logging.Write("Trust Plugin already disabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling Trust Plugin.");
          TreeRoot.Stop();
        }
        
        await Coroutine.Sleep(500);
      
        var sideStep = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
        try
        {
          if (!sideStep.Any())
          {
            Logging.Write("Error enabling SideStep.");
            TreeRoot.Stop();
          }
          else if (!sideStep.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling SideStep.");
            sideStep.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("SideStep already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling SideStep.");
          TreeRoot.Stop();
        }
      ]]>
    </CodeChunk>
    <CodeChunk Name="EnterDuty">
      <![CDATA[
        Logging.Write("Commencing Trust duty.");
        string[] scions = { "Minfilia", "Ryne", "Thancred", "Urianger", "Alphinaud", "Alisaie", "Crystal Exarch", "Lyna", "Y'shtola" };
        var dutyNpc = GameObjectManager.GameObjects.Where(x => x.IsTargetable && x.Distance() < 15f && scions.Contains(x.Name.ToString())).OrderBy(x => x.Distance()).FirstOrDefault();
        while (Core.Me.Location.Distance2D(dutyNpc.Location) > 1.5f)
        {
          await Coroutine.Yield();
          Navigator.PlayerMover.MoveTowards(dutyNpc.Location);
        }
        Navigator.PlayerMover.MoveStop();
        dutyNpc.Interact();
        await Coroutine.Wait(5000, () => SelectString.IsOpen);
        SelectString.ClickSlot(1);
        await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName("Dawn") != null);
        
        if (RaptureAtkUnitManager.GetWindowByName("Dawn") == null) { TreeRoot.Stop(); }
        
        RaptureAtkUnitManager.GetWindowByName("Dawn").SendAction(2,3,15,4,0);//
        await Coroutine.Sleep(100);
        RaptureAtkUnitManager.GetWindowByName("Dawn").SendAction(1,3,14);
        await Coroutine.Wait(10000, () => ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen);
      ]]>
    </CodeChunk>
    <CodeChunk Name="Handle_Cutscene_Talking">
      <![CDATA[
        await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading || QuestLogManager.InCutscene);
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        while (QuestLogManager.InCutscene || Talk.DialogOpen || CommonBehaviors.IsLoading)
        {
          ff14bot.RemoteAgents.AgentCutScene.Instance.PromptSkip();
          if (ff14bot.RemoteAgents.AgentCutScene.Instance.CanSkip && SelectString.IsOpen) { SelectString.ClickSlot(0); }
          if (Talk.DialogOpen) { Talk.Next(); }
          await Coroutine.Yield();
        }
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        await Coroutine.Wait(10000, () => !Core.Me.HasAura(1268));
        await Coroutine.Sleep(3000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="LeaveDuty">
      <![CDATA[
        DutyManager.LeaveActiveDuty();
        await Coroutine.Wait(2000, () => CommonBehaviors.IsLoading);
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        await Coroutine.Sleep(5000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="Transition">
      <![CDATA[
        Core.Me.SetFacing(3.116369f);
        MovementManager.MoveForwardStart();
        await Coroutine.Wait(-1, () => WorldManager.SubZoneId == 2962);
        Navigator.PlayerMover.MoveStop();
      ]]>
    </CodeChunk>
    <CodeChunk Name="ShellCrown">
      <![CDATA[
        var _obj = GameObjectManager.GetObjectsOfType<EventObject>().Where(r => r.Distance() < 50 && r.NpcId == 2009760 && r.IsVisible == true);
        
        if (_obj.Any())
        {
          var obj = _obj.FirstOrDefault();
          while (Core.Me.Distance(obj.Location) > 1f)
          {
            await CommonTasks.MoveTo(obj.Location);
            await Coroutine.Yield();
          }

          Navigator.PlayerMover.MoveStop();

          if(Core.Target == null)
          {
            obj.Target();
            await Coroutine.Sleep(1000);
          }
          Core.Target.Interact();
          await Coroutine.Wait(-1, ()=> Core.Me.IsCasting);
          await Coroutine.Wait(-1, ()=> !Core.Me.IsCasting);
        }
      ]]>
    </CodeChunk>
  </CodeChunks>
</Profile>
