<?xml version="1.0" encoding="utf-8"?>
<Profile>
  <Name>[OrderBot][Trust] Amaurot</Name>
  <Author>Sodimm</Author>
  <BehaviorDirectory>Quest Behaviors</BehaviorDirectory>
  <Order>
    <While Condition="GetQuestStep(69190) == 7">
      <If Condition="not IsOnMap(838)">
        <RunCode Name="Enable_Trust_Plugin"/>
        <WaitTimer WaitTime="3"/>
        <RunCode Name="EnterDuty"/>
        <WaitTimer WaitTime="3"/>
        <If Condition="ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen">
          <CommenceDuty/>
          <WaitTimer WaitTime="3"/>
        </If>
        <WaitWhile Condition="ff14bot.Behavior.CommonBehaviors.IsLoading"/>
      </If>
      <If Condition="IsOnMap(838)">
        <MoveTo Name="Boss Arena 1" XYZ="-79.58617, 748.2328, 100.5795" Distance="1"/>
        <Grind GrindRef="TheFirstBeast" PostCombatDelay="3.0" While="ObjectExistsWithId(8201)"/>
        <MoveTo Name="Coffer 2" XYZ="-60.50607, 748.2327, 62.50991"/>
        <MoveTo Name="Coffer 3" XYZ="25.74221, 728.4708, -119.9524"/>
        <MoveTo Name="Coffer 4" XYZ="48.94165, 729.0496, -225.3814"/>
        <MoveTo Name="Boss Arena 2" XYZ="60.01367, 728, -361.0438" Distance="1"/>
        <WaitWhile Condition="ObjectExistsWithId(8202)"/>
        <RunCode Name="AetherialFlow"/>
        <MoveTo Name="Transition 1" XYZ="-0.01531982, -735.0118, 279.7742"/>
        <RunCode Name="Transition1"/>
        <MoveTo Name="Coffer 6" XYZ="0.04636243, -729.9998, 197.4371"/>
        <MoveTo Name="Transition 2" XYZ="0.1779838, -729.9998, 180.7759"/>
        <RunCode Name="Transition2"/>
        <MoveTo Name="Coffer 7" XYZ="0.09161426, -732.0001, 62.09192"/>
        <MoveTo Name="Transition 3" XYZ="0.163903, -732.0001, 46.89133"/>
        <RunCode Name="Transition3"/>
        <MoveTo Name="Boss Arena 3" XYZ="-0.0480026, -720.0001, -39.52992"/>
        <Grind GrindRef="Therion" PostCombatDelay="3.0" While="ObjectExistsWithId(8210)"/>
        <RunCode Name="LeaveDuty"/>
        <WaitTimer WaitTime="5"/>
        <RunCode Name="Handle_Cutscene_Talking"/>
        <WaitTimer WaitTime="5"/>
      </If>
    </While>
    <RunCode Name="Disable_Trust_Plugin"/>
    <LLoadProfile Path="../MSQ/[OrderBot] ShB MSQ Automation.xml"/>
  </Order>
  <GrindAreas>
    <GrindArea Name="TheFirstBeast">
      <Hotspots>
        <Hotspot XYZ="-80.0041, 748.2328, 75.27725" Radius="120"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8201"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
    <GrindArea Name="Therion">
      <Hotspots>
        <Hotspot XYZ="-0.01531982, -720.0275, -23.23956" Radius="200"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="8210"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
  </GrindAreas>
  <CodeChunks>
    <CodeChunk Name="Enable_Trust_Plugin">
      <![CDATA[
        var sideStep = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
        try
        {
          if (!sideStep.Any())
          {
            Logging.Write("Error enabling SideStep.");
            TreeRoot.Stop();
          }
          else if (!sideStep.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling SideStep.");
            sideStep.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("SideStep already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling SideStep.");
          TreeRoot.Stop();
        }
        
        await Coroutine.Sleep(500);
        
        var trustPlugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "Trust");
        try
        {
          if (!trustPlugin.Any())
          {
            Logging.Write("Error enabling Trust Plugin.");
            TreeRoot.Stop();
          }
          else if (!trustPlugin.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling Trust Plugin.");
            trustPlugin.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("Trust Plugin already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling Trust Plugin.");
          TreeRoot.Stop();
        }
      ]]>
    </CodeChunk>
    <CodeChunk Name="Disable_Trust_Plugin">
      <![CDATA[
        var trustPlugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "Trust");
        try
        {
          if (!trustPlugin.Any())
          {
            Logging.Write("Error enabling Trust Plugin.");
            TreeRoot.Stop();
          }
          else if (trustPlugin.FirstOrDefault().Enabled)
          {
            Logging.Write("Disabling Trust Plugin.");
            trustPlugin.FirstOrDefault().Enabled = false;
          }
          else { Logging.Write("Trust Plugin already disabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling Trust Plugin.");
          TreeRoot.Stop();
        }
        
        await Coroutine.Sleep(500);
      
        var sideStep = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
        try
        {
          if (!sideStep.Any())
          {
            Logging.Write("Error enabling SideStep.");
            TreeRoot.Stop();
          }
          else if (!sideStep.FirstOrDefault().Enabled)
          {
            Logging.Write("Enabling SideStep.");
            sideStep.FirstOrDefault().Enabled = true;
          }
          else { Logging.Write("SideStep already enabled."); }
        }
        catch (Exception ex)
        {
          Logging.Write("Error enabling SideStep.");
          TreeRoot.Stop();
        }
      ]]>
    </CodeChunk>
    <CodeChunk Name="EnterDuty">
      <![CDATA[
        Logging.Write("Commencing Trust duty.");
        string[] scions = { "Minfilia", "Ryne", "Thancred", "Urianger", "Alphinaud", "Alisaie", "Crystal Exarch", "Lyna", "Y'shtola" };
        var dutyNpc = GameObjectManager.GameObjects.Where(x => x.IsTargetable && x.Distance() < 15f && scions.Contains(x.Name.ToString())).OrderBy(x => x.Distance()).FirstOrDefault();
        while (Core.Me.Location.Distance2D(dutyNpc.Location) > 1.5f)
        {
          await Coroutine.Yield();
          Navigator.PlayerMover.MoveTowards(dutyNpc.Location);
        }
        Navigator.PlayerMover.MoveStop();
        dutyNpc.Interact();
        await Coroutine.Wait(5000, () => SelectString.IsOpen);
        SelectString.ClickSlot(1);
        await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName("Dawn") != null);
        
        if (RaptureAtkUnitManager.GetWindowByName("Dawn") == null) { TreeRoot.Stop(); }
        
        RaptureAtkUnitManager.GetWindowByName("Dawn").SendAction(2,3,15,4,0);//
        await Coroutine.Sleep(100);
        RaptureAtkUnitManager.GetWindowByName("Dawn").SendAction(1,3,14);
        await Coroutine.Wait(10000, () => ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen);
      ]]>
    </CodeChunk>
    <CodeChunk Name="Handle_Cutscene_Talking">
      <![CDATA[
        await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading || QuestLogManager.InCutscene);
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        while (QuestLogManager.InCutscene || Talk.DialogOpen || CommonBehaviors.IsLoading)
        {
          ff14bot.RemoteAgents.AgentCutScene.Instance.PromptSkip();
          if (ff14bot.RemoteAgents.AgentCutScene.Instance.CanSkip && SelectString.IsOpen) { SelectString.ClickSlot(0); }
          if (Talk.DialogOpen) { Talk.Next(); }
          await Coroutine.Yield();
        }
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        await Coroutine.Wait(10000, () => !Core.Me.HasAura(1268));
        await Coroutine.Sleep(3000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="LeaveDuty">
      <![CDATA[
        DutyManager.LeaveActiveDuty();
        await Coroutine.Wait(2000, () => CommonBehaviors.IsLoading);
        await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
        await Coroutine.Sleep(5000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="AetherialFlow">
      <![CDATA[
        GameObject _portal = GameObjectManager.GetObjectByNPCId(2009984);
        while (Core.Me.Distance(_portal.Location) > 1f)
        {
          await CommonTasks.MoveTo(_portal.Location);
          await Coroutine.Yield();
        }
    
        Navigator.PlayerMover.MoveStop();
        Poi.Current = new Poi(_portal, PoiType.Kill);
        Poi.Current.Unit.Interact();					
        await Coroutine.Sleep(5000);		
      ]]>
    </CodeChunk>
    <CodeChunk Name="Transition1">
      <![CDATA[
        Core.Me.SetFacing(3.13531f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(2000);
        Navigator.PlayerMover.MoveStop();
      ]]>
    </CodeChunk>
    <CodeChunk Name="Transition2">
      <![CDATA[
        Core.Me.SetFacing(3.131345f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(2000);
        Navigator.PlayerMover.MoveStop();
      ]]>
    </CodeChunk>
    <CodeChunk Name="Transition3">
      <![CDATA[
        Core.Me.SetFacing(3.144462f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(2000);
        Navigator.PlayerMover.MoveStop();
      ]]>
    </CodeChunk>
  </CodeChunks>
</Profile>
