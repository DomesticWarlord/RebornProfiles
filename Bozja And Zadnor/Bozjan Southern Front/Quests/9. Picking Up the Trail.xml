<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: Picking Up the Trail
  Authors:
-->
<Profile>
  <Name>Picking Up the Trail</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
    <!-- Picking Up the Trail -->
    <If Condition="not HasQuest(69486) and not IsQuestCompleted(69486)">
      <LisbethTravel ZoneId="920" XYZ="-209.9232, 5, 819.7579"/>
      <If Condition="IsQuestAcceptQualified(69486)">
        <LLPickupQuest QuestId="69486" NpcId="1034464"/>
        <LLSmallTalk/>
      </If>
    </If> 
    <If Condition="GetQuestStep(69486) == 1">
		<If Condition="GetQuestById(69486).GetTodoArgs(1, 0).Item1 == 0">
		  <LisbethTravel ZoneId="920" XYZ="499.4144, 2.111758, 885.6027"/>
		  <UseObject NpcId="2011149" XYZ="500.0839, 1.998901, 886.778" QuestId="69486" StepId="1" UseTimes="1"/>
		</If> 
		<If Condition="GetQuestById(69486).GetTodoArgs(2, 0).Item1 == 0">
			<LisbethTravel ZoneId="920" XYZ="214.6945, 3.237701, 271.3306"/>
			<UseObject NpcId="2011150" XYZ="217.4563, 3.097534, 271.4121" QuestId="69486" StepId="1" UseTimes="1"/>			
		</If>	
    </If>
    <If Condition="GetQuestStep(69486) == 2">
      <LisbethTravel ZoneId="920" XYZ="-212.4263, 5, 816.5759"/>
      <LLTalkTo NpcId="1034005" XYZ="-213.0617, 5, 814.847" QuestId="69486" StepId="2"/>	  
    </If>	
    <If Condition="GetQuestStep(69486) == 255">
      <LisbethTravel ZoneId="920" XYZ="-212.4263, 5, 816.5759"/>
      <LLTurnIn QuestId="69486" NpcId="1034005" XYZ="-213.0617, 5, 814.847"/>
      <LLSmallTalk/>
    </If>

	<LLoadProfile Path="../Start.xml"/>
	
  </Order>
    <CodeChunks>
		<CodeChunk Name="EnterBozjan">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(1032080);

					if (!npcId.IsWithinInteractRange)

						{
							var _target = npcId.Location;
							Navigator.PlayerMover.MoveTowards(_target);
							while (_target.Distance2D(Core.Me.Location) >= 4)
								{
									Navigator.PlayerMover.MoveTowards(_target);
									await Coroutine.Sleep(100);
								}
									Navigator.PlayerMover.MoveStop();
								}

					npcId.Interact();

					await Coroutine.Wait(10000, () => SelectString.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						if (ConditionParser.IsQuestCompleted(69620)||ConditionParser.GetQuestStep(69620) > 1)
						{
							Logging.WriteDiagnostic("Selecting 'The Bozjan Southern Front'.");
							ff14bot.RemoteWindows.SelectString.ClickSlot(2);
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
								ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							}							
						}					
						if (ConditionParser.IsQuestCompleted(69562))
						{
							Logging.WriteDiagnostic("Selecting 'The Bozjan Southern Front'.");
							ff14bot.RemoteWindows.SelectString.ClickSlot(1);
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
								ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							}							
						}
						else if (!ConditionParser.IsQuestCompleted(69562))
						{
							Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
							ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
								ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							}								
						}						
					}										

					await Coroutine.Wait(5000, () => ContentsFinderConfirm.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
				   
					if (ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen)						
						{
							Logging.WriteDiagnostic("Commencing Duty.");
							ff14bot.RemoteWindows.ContentsFinderConfirm.Commence();
							await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading);
							   if (CommonBehaviors.IsLoading)
							   {
								   await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
							   }									
						}			
			]]>			
		</CodeChunk>
		<CodeChunk Name="AetheryteSteva">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(2011162);

					if (!npcId.IsWithinInteractRange)

						{
							var _target = npcId.Location;
							Navigator.PlayerMover.MoveTowards(_target);
							while (_target.Distance2D(Core.Me.Location) >= 4)
								{
									Navigator.PlayerMover.MoveTowards(_target);
									await Coroutine.Sleep(100);
								}
									Navigator.PlayerMover.MoveStop();
								}

					npcId.Interact();

					await Coroutine.Wait(10000, () => SelectString.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						Logging.WriteDiagnostic("Choosing 'Camp Steva'.");
						SelectString.ClickLineContains("Steva");;
					}

					await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading);
						if (CommonBehaviors.IsLoading)
							{
								await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
							}					
		
			]]>			
		</CodeChunk>
		<CodeChunk Name="AetheryteAegis">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(2011142);

					if (!npcId.IsWithinInteractRange)

						{
							var _target = npcId.Location;
							Navigator.PlayerMover.MoveTowards(_target);
							while (_target.Distance2D(Core.Me.Location) >= 4)
								{
									Navigator.PlayerMover.MoveTowards(_target);
									await Coroutine.Sleep(100);
								}
									Navigator.PlayerMover.MoveStop();
								}

					npcId.Interact();

					await Coroutine.Wait(10000, () => SelectString.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						Logging.WriteDiagnostic("Choosing 'Utya's Aegis'.");
						SelectString.ClickLineContains("Aegis");;
					}

					await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading);
						if (CommonBehaviors.IsLoading)
							{
								await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
							}					
		
			]]>			
		</CodeChunk>		
	</CodeChunks>  
</Profile>  