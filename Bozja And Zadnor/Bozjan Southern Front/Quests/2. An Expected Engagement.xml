<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: An Expected Engagement
  Authors:
-->
<Profile>
  <Name>An Expected Engagement</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
    <!-- An Expected Engagement -->
    <If Condition="IsQuestCompleted(69477) and not HasQuest(69479) and not IsQuestCompleted(69479)">
	  <If Condition="not IsOnMap(920)">
		<If Condition="not IsOnMap(915)">	
			<While Condition="not IsOnMap(759)">
				<TeleportTo AetheryteId="127"/> <!-- The Doman Enclave -->
			</While>				
			<GetTo ZoneId="759" XYZ="126.2195, -4.178713, 97.66013"/>
			<UseTransport NpcId="1032884" InteractDistance="3.0" XYZ="127.2754, -4.178713, 98.68005"/>
		</If>	  
		<MoveTo ZoneId="915" XYZ="-27.72526, -0.5876654, -33.76041"/>
		<RunCode name="EnterBozjan"/>
	  </If>		
      <MoveTo ZoneId="920" XYZ="-184.1201, 5, 811.7657"/>
      <If Condition="IsQuestAcceptQualified(69479)">
        <LLPickupQuest QuestId="69479" NpcId="1034006"/>
      </If>
    </If>
    <If Condition="GetQuestStep(69479) == 1">
		<MoveTo XYZ="-53.84216, 16.91385, 737.631" />
		<Grind GrindRef="Slashers and Nimrods" while="GetQuestStep(69479) == 1"/>  
    </If>
    <If Condition="GetQuestStep(69479) == 255">
      <MoveTo ZoneId="920" XYZ="-185.2452, 5, 813.149"/>
      <LLTurnIn NpcId="1034006" XYZ="-182.7268, 5, 813.2295" QuestId="69479" StepId="255"/>
	  <NoCombatMoveTo ZoneId="920" XYZ="-196.5356, 5, 873.1154"/>
	  <RunCode name="RankUp"/>	  
    </If>

	<LLoadProfile Path="../Start.xml"/>
	
  </Order>
  <GrindAreas>
	<GrindArea name="Slashers and Nimrods">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-68.6456, 18, 715.2679" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="9517" Weight="1" /> <!-- 4th Legion Slasher -->
			<TargetMob Id="9519" Weight="1" /> <!-- 4th Legion Nimrod -->
        </TargetMobs>
	</GrindArea>
  </GrindAreas>	
    <CodeChunks>
		<CodeChunk Name="EnterBozjan">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(1032080);

					if (!npcId.IsWithinInteractRange)

						{
							var _target = npcId.Location;
							Navigator.PlayerMover.MoveTowards(_target);
							while (_target.Distance2D(Core.Me.Location) >= 4)
								{
									Navigator.PlayerMover.MoveTowards(_target);
									await Coroutine.Sleep(100);
								}
									Navigator.PlayerMover.MoveStop();
								}

					npcId.Interact();

					await Coroutine.Wait(10000, () => SelectString.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						if (ConditionParser.IsQuestCompleted(69620)||ConditionParser.GetQuestStep(69620) > 1)
						{
							Logging.WriteDiagnostic("Selecting 'The Bozjan Southern Front'.");
							ff14bot.RemoteWindows.SelectString.ClickSlot(2);
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
								ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							}							
						}					
						if (ConditionParser.IsQuestCompleted(69562))
						{
							Logging.WriteDiagnostic("Selecting 'The Bozjan Southern Front'.");
							ff14bot.RemoteWindows.SelectString.ClickSlot(1);
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
								ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							}							
						}
						else if (!ConditionParser.IsQuestCompleted(69562))
						{
							Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
							ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Selecting 'Enter the Bozjan southern front'.");
								ff14bot.RemoteWindows.SelectString.ClickSlot(0);
							}								
						}						
					}										

					await Coroutine.Wait(5000, () => ContentsFinderConfirm.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
				   
					if (ff14bot.RemoteWindows.ContentsFinderConfirm.IsOpen)						
						{
							Logging.WriteDiagnostic("Commencing Duty.");
							ff14bot.RemoteWindows.ContentsFinderConfirm.Commence();
							await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading);
							   if (CommonBehaviors.IsLoading)
							   {
								   await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
							   }									
						}			
			]]>			
		</CodeChunk>
		<CodeChunk Name="RankUp">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(1033961);

					if (!npcId.IsWithinInteractRange)

						{
							var _target = npcId.Location;
							Navigator.PlayerMover.MoveTowards(_target);
							while (_target.Distance2D(Core.Me.Location) >= 4)
								{
									Navigator.PlayerMover.MoveTowards(_target);
									await Coroutine.Sleep(100);
								}
									Navigator.PlayerMover.MoveStop();
								}

					npcId.Interact();
					
					await Coroutine.Wait(5000, () => Talk.DialogOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					while (await Coroutine.Wait(1000, () => Talk.DialogOpen))
					{
						Talk.Next();
						await Coroutine.Wait(5000, () => !Talk.DialogOpen);
						await Buddy.Coroutines.Coroutine.Sleep(1000);
					}				

					await Coroutine.Wait(10000, () => SelectString.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						Logging.WriteDiagnostic("Choosing Enter the Bozjan southern front.");
						ff14bot.RemoteWindows.SelectString.ClickSlot(0);
					}					

					await Coroutine.Wait(5000, () => Talk.DialogOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					while (await Coroutine.Wait(1000, () => Talk.DialogOpen))
					{
						Talk.Next();
						await Coroutine.Wait(5000, () => !Talk.DialogOpen);
						await Buddy.Coroutines.Coroutine.Sleep(1000);
					}
				
			]]>			
		</CodeChunk>		
	</CodeChunks>
	
</Profile>