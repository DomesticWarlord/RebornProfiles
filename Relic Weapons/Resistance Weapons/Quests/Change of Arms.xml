<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: Change of Arms
  Authors: DomesticWarlord86
-->
<Profile>
  <Name></Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
  
	<!-- Check Prereq Quests -->
	<If Condition="not IsQuestCompleted(69562)">
	  <LLoadProfile Path="Fit for a Queen.xml"/>
	</If>  
  
    <!-- In the Queen's Image -->
    <If Condition="not HasQuest(69573) and not IsQuestCompleted(69573)">
      <LisbethTravel Zone="915" Subzone="0" Position="5.196827, 3.118057, -56.00948"/>
      <If Condition="IsQuestAcceptQualified(69573)">
        <LLPickupQuest QuestId="69573" NpcId="1032879"/>
        <LLSmallTalk/>
      </If>
    </If>
    <If Condition="GetQuestStep(69573) == 255">
      <LisbethTravel Zone="915" Subzone="0" Position="2.824108, 3.194337, -58.06374"/>
      <LLTurnIn QuestId="69573" NpcId="1032905" XYZ="1.113892, 3.312975, -59.55603"/>
      <LLSmallTalk/>
    </If>  
   
    <!-- î‚¿ Change of Arms -->
    <If Condition="not HasQuest(69574)">
		<If Condition="not IsOnMap(915)">	
			<While Condition="not IsOnMap(759)">
				<TeleportTo AetheryteId="127"/> <!-- The Doman Enclave -->
			</While>				
			<GetTo ZoneId="759" XYZ="126.2195, -4.178713, 97.66013"/>
			<UseTransport NpcId="1032884" InteractDistance="3.0" XYZ="127.2754, -4.178713, 98.68005"/>
		</If>	  	
      <MoveTo XYZ="2.502354, 3.161222, -57.83289"/>
      <If Condition="IsQuestAcceptQualified(69574)">
		<RunCode name="Change of Arms"/>
      </If>
    </If>
    <If Condition="GetQuestStep(69574) == 255">
	  <While condition="not HasAtLeast(32956,15)">
		  <LLToast message="Please collect 15 Loathsome Memories of the Dying."/>
		  <LLToast message="These come from Critical Engagments (very low drop rate) and Crystal Tower raids."/>
		  <WaitTimer WaitTime="26" />
	  </While>
	  <If condition="HasAtLeast(32956,15)">
		<!-- Handle already wearing relic -->
		<If Condition="ClassName == ClassJobType.RedMage">
		  <ChangeClass Job="Redmage" force="True"/>
   		  <While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId == 30799">
			<Log Message="Recollection weapon equipped, going to purchase differnt tool." />
			<LisbethTravel Area="Idyllshire" Position="75.44334, 207.0313, 3.713525"/>
			<While condition="not HasAtLeast(20397,1)">
			  <BuyItem NpcId="1012093" ItemId="20397" ItemCount="1" DialogOption="0" XYZ="75.88306,207.1172,6.607117"/>
			</While>  
			<EquipWeapon ItemID="20397"/>
			<WaitTimer WaitTime="3" />
          </While>		  
		</If>
		<If Condition="ClassName == ClassJobType.Paladin">	
			<ChangeClass Job="Paladin" Force="True"/>
			<While Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId == 30785">
				<Log Message="Recollection weapon equipped, going to purchase differnt weapon." />
				<LisbethTravel Area="Central Thanalan" Position="-10.65622, -2.04808, -150.1143"/>
				<BuyItem NpcId="1001563" ItemIds="1602,2219" ItemCount="1,1" DialogOption="0" XYZ="-8.346741,-2.04808,-149.3401"/>
				<EquipWeapon ItemID="1602"/>
				<WaitTimer WaitTime="3" />
				<EquipWeapon ItemID="2219"/>
				<WaitTimer WaitTime="3" />
			</While>
		</If>		
		<If Condition="not IsOnMap(915)">	
			<While Condition="not IsOnMap(759)">
				<TeleportTo AetheryteId="127"/> <!-- The Doman Enclave -->
			</While>				
			<GetTo ZoneId="759" XYZ="126.2195, -4.178713, 97.66013"/>
			<UseTransport NpcId="1032884" InteractDistance="3.0" XYZ="127.2754, -4.178713, 98.68005"/>
		</If>		
        <LisbethTravel Zone="915" Subzone="0" Position="0.4522509, 3.071334, -57.42433"/>
        <LLTurnIn ItemId="32956" QuestId="69574" NpcId="1032905" XYZ="1.113892, 3.312975, -59.55603"/>
        <LLSmallTalk/>	
	  </If>
    </If>
	
	<If Condition="ClassName == ClassJobType.Paladin">
		<If Condition="HasItem(32651)">
			<EquipWeapon ItemID="32651"/>
			<WaitTimer WaitTime="3" />
			<EquipWeapon ItemID="32668"/>
			<AutoEquip UpdateGearSet="true"/>
			<LLSellItem ItemIds="1602,2219"/>
		</If>
	</If>	

	<LLoadProfile Path="../Start.xml"/>	
	
  </Order>
  <GrindAreas> 
  </GrindAreas>
  <CodeChunks>
		<CodeChunk Name="Change of Arms">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(1032905);

					if (!npcId.IsWithinInteractRange)

						{
							var _target = npcId.Location;
							Navigator.PlayerMover.MoveTowards(_target);
							while (_target.Distance2D(Core.Me.Location) >= 4)
								{
									Navigator.PlayerMover.MoveTowards(_target);
									await Coroutine.Sleep(100);
								}
									Navigator.PlayerMover.MoveStop();
								}

					npcId.Interact();			

					await Coroutine.Wait(10000, () => SelectIconString.IsOpen);
					
					if (!SelectIconString.IsOpen)
					{
						npcId.Interact();

						await Coroutine.Wait(10000, () => SelectIconString.IsOpen);
					}	
					
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						Logging.WriteDiagnostic("Choosing current quest.");
						if (!ConditionParser.IsQuestCompleted(69576))
						{
							Logging.WriteDiagnostic("Choosing 'Change of Arms'.");
							SelectIconString.ClickLineContains(("Change of Arms"));
						}
						else if (ConditionParser.IsQuestCompleted(69576))
						{
							Logging.WriteDiagnostic("Resistance Weapon Forging'.");
							SelectIconString.ClickLineContains(("Resistance Weapon Forging"));
							await Coroutine.Wait(10000, () => SelectString.IsOpen);
							await Buddy.Coroutines.Coroutine.Sleep(500);
							{
								Logging.WriteDiagnostic("Choosing 'Change of Arms'.");
								SelectString.ClickLineContains(("Change of Arms"));
							}							
						}
					}									

					await Coroutine.Wait(10000, () => Talk.DialogOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					while (Talk.DialogOpen)
					{
						Talk.Next();
						await Coroutine.Wait(1000, () => !Talk.DialogOpen);
						await Coroutine.Wait(1000, () => Talk.DialogOpen);
						await Coroutine.Yield();
					}	
					
					await Coroutine.Wait(10000, () => SelectString.IsOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					{
						Logging.WriteDiagnostic("Choosing current class.");
						ff14bot.RemoteWindows.SelectString.ClickSlot(1);
					}

					await Buddy.Coroutines.Coroutine.Sleep(1000);
					await Coroutine.Wait(1000, () => JournalAccept.IsOpen);
					JournalAccept.Accept();					

					await Coroutine.Wait(10000, () => Talk.DialogOpen);
					await Buddy.Coroutines.Coroutine.Sleep(500);
					while (Talk.DialogOpen)
					{
						Talk.Next();
						await Coroutine.Wait(1000, () => !Talk.DialogOpen);
						await Coroutine.Wait(1000, () => Talk.DialogOpen);
						await Coroutine.Yield();
					}

					
			]]>			
		</CodeChunk>	  
  </CodeChunks>
</Profile>  